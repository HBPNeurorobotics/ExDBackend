<?xml version="1.0" encoding="UTF-8"?>
<bibi xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schemas.humanbrainproject.eu/SP10/2014/BIBI"
      xsi:schemaLocation="http://schemas.humanbrainproject.eu/SP10/2014/BIBI bibi_configuration.xsd">
    <brainModel>
        <file>brain_model/braitenberg.h5</file>
        <populations population="sensors" xsi:type="Range" from="0" to="5"/>
        <populations population="actors" xsi:type="Range" from="5" to="8"/>
    </brainModel>
    <bodyModel>husky_model/model.sdf</bodyModel>
    <transferFunction xsi:type="PythonTransferFunction"
                      src="linear_twist.py"/>
    <transferFunction xsi:type="PythonTransferFunction">
    <![CDATA[
    import sensor_msgs.msg
    @nrp.MapRobotSubscriber("camera", Topic('/husky/camera', sensor_msgs.msg.Image))
    @nrp.MapSpikeSource("red_left_eye", nrp.brain.sensors[slice(0, 3, 2)], nrp.poisson)
    @nrp.MapSpikeSource("red_right_eye", nrp.brain.sensors[slice(1, 4, 2)], nrp.poisson)
    @nrp.MapSpikeSource("green_blue_eye", nrp.brain.sensors[4], nrp.poisson)
    @nrp.Robot2Neuron()
    def eye_sensor_transmit(t, camera, red_left_eye, red_right_eye, green_blue_eye):
        image_results = hbp_nrp_cle.tf_framework.tf_lib.detect_red(image=camera.value)

        red_left_eye.rate = 1000.0 * image_results.left
        red_right_eye.rate = 1000.0 * image_results.right
        green_blue_eye.rate = 1000.0 * image_results.go_on
    ]]>
    </transferFunction>
    <transferFunction xsi:type="PythonTransferFunction">
<![CDATA[
import sensor_msgs.msg
@nrp.MapRobotSubscriber("camera", Topic('/husky/camera', sensor_msgs.msg.Image))
@nrp.MapSpikeSource("red_left_eye", nrp.brain.sensors[slice(0, 3, 2)], nrp.poisson)
@nrp.MapSpikeSource("red_right_eye", nrp.brain.sensors[slice(1, 4, 2)], nrp.poisson)
@nrp.MapSpikeSource("green_blue_eye", nrp.brain.sensors[4], nrp.poisson)
@nrp.Robot2Neuron()
def eye_sensor_transmit2(t, camera, red_left_eye, red_right_eye, green_blue_eye):
    image_results = hbp_nrp_cle.tf_framework.tf_lib.detect_red(image=camera.value)

    red_left_eye.rate = 1000.0 * image_results.left
    red_right_eye.rate = 1000.0 * image_results.right
    green_blue_eye.rate = 1000.0 * image_results.go_on
]]>
    </transferFunction>
    <transferFunction xsi:type="PythonTransferFunction">
        <![CDATA[


                        import sensor_msgs.msg
                        @nrp.MapRobotSubscriber("camera", Topic('/husky/camera', sensor_msgs.msg.Image))
                        @nrp.MapSpikeSource("red_left_eye", nrp.brain.sensors[slice(0, 3, 2)], nrp.poisson)
                        @nrp.MapSpikeSource("red_right_eye", nrp.brain.sensors[slice(1, 4, 2)], nrp.poisson)
                        @nrp.MapSpikeSource("green_blue_eye", nrp.brain.sensors[4], nrp.poisson)
                        @nrp.Robot2Neuron()
                        def eye_sensor_transmit2(t, camera, red_left_eye, red_right_eye, green_blue_eye):
                            image_results = hbp_nrp_cle.tf_framework.tf_lib.detect_red(image=camera.value)

                            red_left_eye.rate = 1000.0 * image_results.left
                            red_right_eye.rate = 1000.0 * image_results.right
                            green_blue_eye.rate = 1000.0 * image_results.go_on
]]>
    </transferFunction>
</bibi>
