<?xml version="1.0" encoding="UTF-8"?>
<bibi xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.humanbrainproject.eu/SP10/2014/BIBI" xsi:schemaLocation="http://schemas.humanbrainproject.eu/SP10/2014/BIBI bibi_configuration.xsd">
  <brainModel>
    <file>brain_model/my_brain.py</file>
    <populations population="sensors" xsi:type="Range" from="0" to="5"/>
    <populations population="actors" xsi:type="Range" from="5" to="8"/>
  </brainModel>
  <bodyModel>husky_model/model.sdf</bodyModel>
  <transferFunction xsi:type="PythonTransferFunction" src="BIBI/grab_image_retina_1.py"/>
  <transferFunction xsi:type="PythonTransferFunction">
    #<![CDATA[
    import sensor_msgs.msg

    @nrp.MapRetina("retina", "retina_config_2.py")
    @nrp.MapRobotSubscriber("camera", Topic('/icub_model/left_eye_camera/image_raw', sensor_msgs.msg.Image))
    @nrp.MapSpikeSource("neurons", nrp.map_neurons(range(0, 320), lambda i: nrp.brain.sensors[i]), nrp.dc_source)
    @nrp.Robot2Neuron()
    # Example TF: get image and fire at constant rate. You could do something with the image here and fire accordingly.
    def grab_image_retina_2(t, retina, neurons, camera):
        retina = retina.value
        tf = hbp_nrp_cle.tf_framework.tf_lib

        image = camera.value
        if image is not None:
            retina.update(tf.bridge.imgmsg_to_cv2(image))
            magic_row = 70
            for i in xrange(320):
                neurons[i].amplitude = retina.getValue(magic_row, i, 'Output')
    #]]>
  </transferFunction>

</bibi>
