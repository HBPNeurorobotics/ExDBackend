<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
        targetNamespace="http://schemas.humanbrainproject.eu/SP10/2014/ExDConfig"
        xmlns="http://schemas.humanbrainproject.eu/SP10/2014/ExDConfig"
           attributeFormDefault="unqualified" elementFormDefault="qualified">
    <!--Contains a timeline condition -->
    <xs:complexType name="Condition" abstract="true">
    </xs:complexType>

    <xs:complexType name="TimelineCondition">
        <xs:complexContent>
            <xs:extension base="Condition">
                <xs:sequence>
                    <xs:element name="time" type="xs:time"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Contains a hardware condition -->
    <xs:complexType name="HardwareCondition">
        <xs:complexContent>
            <xs:extension base="Condition">
                <xs:sequence>
                    <xs:element name="key" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Contains a property condition -->
    <xs:complexType name="PropertyEquals">
        <xs:complexContent>
            <xs:extension base="Condition">
                <xs:sequence>
                    <xs:element name="identifier" type="xs:string"/>
                    <xs:element name="value" type="xs:anyType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Contains an or -->
    <xs:complexType name="Or">
        <xs:complexContent>
            <xs:extension base="Condition">
                <xs:sequence>
                    <xs:element name="conditions" minOccurs="2" maxOccurs="unbounded"
                                type="Condition"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Contains an and -->
    <xs:complexType name="And">
        <xs:complexContent>
            <xs:extension base="Condition">
                <xs:sequence>
                    <xs:element name="conditions" minOccurs="2" maxOccurs="unbounded"
                                type="Condition"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Action" abstract="true">
    </xs:complexType>

    <xs:complexType name="PropertySetAction">
        <xs:complexContent>
            <xs:extension base="Action">
                <xs:sequence>
                    <xs:element name="identifier" type="xs:string"/>
                    <xs:element name="value" type="xs:anyType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--Contains a generic event -->
    <xs:complexType name="Event">
        <xs:sequence>
            <xs:element name="condition" type="Condition" minOccurs="1" maxOccurs="1"/>
            <xs:element name="actions" type="Action" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!--Contains a pose -->
    <xs:complexType name="Pose">
        <xs:sequence>
            <xs:element name="x" type="xs:double"/>
            <xs:element name="y" type="xs:double"/>
            <xs:element name="z" type="xs:double"/>
            <xs:element name="ux" type="xs:double"/>
            <xs:element name="uy" type="xs:double"/>
            <xs:element name="uz" type="xs:double"/>
            <xs:element name="theta" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <!--Contains a environmentModel -->
    <xs:complexType name="EnvironmentModel">
        <xs:sequence>
            <xs:element name="location" type="xs:string"/>
            <xs:element name="pose" type="Pose"/>
        </xs:sequence>
    </xs:complexType>

    <!--Root element of the ExD file -->
    <xs:complexType name="ExD">
        <xs:sequence>
            <xs:element name="environmentModel" type="EnvironmentModel"/>
            <xs:element name="bibiConf" type="xs:string"/>
            <xs:element name="timeout" type="xs:double" minOccurs="0" maxOccurs="1"/>
            <xs:element name="events" minOccurs="0" maxOccurs="unbounded" type="Event"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="ExD" type="ExD"/>
</xs:schema>
